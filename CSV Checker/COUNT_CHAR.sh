#!/bin/bash
#------------------------------------------------------
# This file count the number of instances of a charactor accuring per line and if different then expected outputs to a log file autogenerated by the script
#
# Change History
# --------------
#
# Date        Changed By     Descrription
# --------------------------------------------------------
# 08/27/2012  AThorpe        Original Release
# 08/30/2012  AThorpe		 Added Scan Dir and count first row
# 09/04/2012  AThorpe		 Updated output text
# 09/11/2012  AThorpe		 Only output to log if there is a problem, otherwise ignore
# -------------------------------------------------------
#
###########################################################################################################
#
# Modify The Parameters Below According To Your Specific Needs
#
###########################################################################################################

CHAR="~"									 # Charactor that is being counted
DIRPATH=/opt/nas/clmhub_dev/bpd/scan		 # Location of directory to scan (no trailing slash)

OUTFILE="errors"						     # Name for output file (no file type)
OUTPATH=/opt/nas/clmhub_dev/bpd	  			 # Set output directory (no trailing slash)

###########################################################################################################
#
# Do Not Modify Code Below This Mark
#
###########################################################################################################

# Loop through directory and for each csv file start processing
for file in ${DIRPATH}/*.csv
do
  DATE=`date +"%m/%d/%Y %H:%M:%S.%N"`					 # Get current date and time
  fname=$(basename "$file" ".csv")						 # Get name of input file

	# Use awk to loop through file, take the character count from the 1st row and check all other rows 
	# against this count. If higher or lower print the line # and count to text file
	awk ' { sum=0;
			for(i=1; i<= length($0); i++) {if (substr($0,i,1)=="'$CHAR'") {sum++} }
			if(FNR==1) 
			{
				correctNumber=sum
				cnt=1
			}
			else
			{
				if(correctNumber != sum)
				{
					if(cnt==1)
					{
						print("\n\n************************************************")
						print("File Name: '$fname'\n")
						print("Scanned on: '$DATE'\n")
						printf( "Expected Count per Row: %d\n", correctNumber)
						printf("\n")
						printf("Errors:\n")
						printf( "line %d > actual count = %d\n", FNR, sum)
						cnt++
					}
					else
					{
						printf( "line %d > actual count = %d\n", FNR, sum)
						cnt++
					}
				}
			}
		  }' $file  >> $OUTPATH/$OUTFILE.log
done

#EOF